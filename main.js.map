{"version":3,"sources":["webpack://excalibur-webpack/./src/scenes/level-one/level-one.ts","webpack://excalibur-webpack/./src/resources.ts","webpack://excalibur-webpack/./src/actors/player/tile.ts","webpack://excalibur-webpack/./src/index.ts","webpack://excalibur-webpack/webpack/bootstrap","webpack://excalibur-webpack/webpack/runtime/global","webpack://excalibur-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://excalibur-webpack/webpack/runtime/publicPath","webpack://excalibur-webpack/webpack/runtime/jsonp chunk loading","webpack://excalibur-webpack/webpack/startup"],"names":["onInitialize","engine","onActivate","onDeactivate","Scene","Resources","Sword","Texture","sword","Tile","tile","SpriteFont","game","value","x","y","pos","vec","width","height","color","Color","speed","tileValue","body","collider","type","CollisionType","label","Label","on","event","actor","hasOwnProperty","other","tileA","tileB","console","log","kill","this","addDrawing","draw","delta","update","input","keyboard","isHeld","Input","accelerate","onPostUpdate","vel","drawWidth","drawHeight","text","toString","setTo","Actor","displayMode","DisplayMode","start","tiles","levelOne","LevelOne","i","addTileOnGrid","font","image","alphabet","caseInsensitive","columns","rows","spWidth","spHeight","newTileTimer","Timer","fcn","interval","repeats","screen","resolution","add","evt","key","loader","Loader","Object","values","Math","random","canvasWidth","canvasHeight","pow","floor","push","Engine","then","goToScene","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","m","g","globalThis","Function","e","window","o","obj","prop","prototype","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","installedChunks","179","deferredModules","checkDeferredModules","webpackJsonpCallback","parentChunkLoadingFunction","data","chunkId","chunkIds","moreModules","runtime","executeModules","resolves","shift","apply","chunkLoadingGlobal","self","checkDeferredModulesImpl","result","deferredModule","fulfilled","j","depId","splice","s","forEach","bind","startup"],"mappings":"iYAKA,2B,+CAIA,OAJ8B,OACrB,YAAAA,aAAP,SAAoBC,KACb,YAAAC,WAAP,aACO,YAAAC,aAAP,aACF,EAJA,CAA8B,EAAAC,O,0BCIxBC,EAAY,CACdC,MAAO,IAAI,EAAAC,QAAQC,GACnBC,KAAM,IAAI,EAAAF,QAAQG,GAClBC,WAAY,IAAI,EAAAJ,QAAQ,I,iWCR5B,cAIE,WAAYK,EAAYC,EAAeC,EAAWC,GAAlD,MACE,YAAM,CACJC,KAAK,IAAAC,KAAIH,EAAGC,GACZG,MAAO,GACPC,OAAQ,GACRC,MAAO,IAAI,EAAAC,MAAM,IAAK,IAAK,QAC3B,K,OARI,EAAAC,MAAiB,GASvB,EAAKC,UAAYV,EACjB,EAAKW,KAAKC,SAASC,KAAO,EAAAC,cAAA,OAE1B,EAAKC,MAAQ,IAAI,EAAAC,MAAM,IAAKf,EAAGC,GAE/B,EAAKe,GAAG,gBAAgB,SAACC,GACvB,GAAIA,EAAMC,MAAMC,eAAe,cAAgBF,EAAMG,MAAMD,eAAe,aAAa,CACrF,IAAIE,EAAQJ,EAAMC,MACdI,EAAQL,EAAMG,MAClBG,QAAQC,IAAI,mBACRH,EAAMZ,WAAaa,EAAMb,YAC3BY,EAAMZ,WAAaa,EAAMb,UACzBa,EAAMG,OACRF,QAAQC,IAAI,sC,EA6EpB,OArG0B,OA+BxB,YAAAtC,aAAA,WACEwC,KAAKC,WAAWpC,EAAUI,OAGrB,YAAAiC,KAAP,SAAYzC,EAAQ0C,GAClB,YAAMD,KAAI,UAACzC,EAAQ0C,GACnBH,KAAKZ,MAAMc,KAAKzC,EAAQ0C,IAInB,YAAAC,OAAP,SAAc3C,EAAQ0C,IAElB1C,EAAO4C,MAAMC,SAASC,OAAO,EAAAC,MAAA,SAC7B/C,EAAO4C,MAAMC,SAASC,OAAO,EAAAC,MAAA,WAE7BR,KAAKS,WAAW,GAAiB,EAAdT,KAAKlB,QAGxBrB,EAAO4C,MAAMC,SAASC,OAAO,EAAAC,MAAA,SAC7B/C,EAAO4C,MAAMC,SAASC,OAAO,EAAAC,MAAA,aAE7BR,KAAKS,WAAW,EAAgB,EAAbT,KAAKlB,QAGxBrB,EAAO4C,MAAMC,SAASC,OAAO,EAAAC,MAAA,SAC7B/C,EAAO4C,MAAMC,SAASC,OAAO,EAAAC,MAAA,aAE7BR,KAAKS,YAAyB,EAAdT,KAAKlB,MAAY,IAIjCrB,EAAO4C,MAAMC,SAASC,OAAO,EAAAC,MAAA,SAC7B/C,EAAO4C,MAAMC,SAASC,OAAO,EAAAC,MAAA,cAE7BR,KAAKS,WAAWT,KAAKlB,MAAO,GAE9B,YAAMsB,OAAM,UAAC3C,EAAQ0C,IAGhB,YAAAO,aAAP,SAAoBjD,EAAQ0C,GACtBH,KAAKxB,IAAIF,EAAI0B,KAAKtB,MAAQ,IAC5BsB,KAAKW,IAAIrC,EAAI,EACb0B,KAAKxB,IAAIF,EAAI0B,KAAKtB,MAAQ,GAGxBsB,KAAKxB,IAAIF,EAAI0B,KAAKtB,MAAQ,EAAIjB,EAAOmD,YACvCZ,KAAKW,IAAIrC,EAAI,EACb0B,KAAKxB,IAAIF,EAAIb,EAAOmD,UAAYZ,KAAKtB,MAAQ,GAG3CsB,KAAKxB,IAAID,EAAIyB,KAAKrB,OAAS,IAC7BqB,KAAKW,IAAIpC,EAAI,EACbyB,KAAKxB,IAAID,EAAIyB,KAAKrB,OAAS,GAGzBqB,KAAKxB,IAAID,EAAIyB,KAAKrB,OAAS,EAAIlB,EAAOoD,aACxCb,KAAKW,IAAIpC,EAAI,EAEbyB,KAAKxB,IAAID,EAAId,EAAOoD,WAAab,KAAKrB,OAAS,GAEjD,YAAM+B,aAAY,UAACjD,EAAQ0C,GAE3BH,KAAKZ,MAAMZ,IAAIF,EAAI0B,KAAKxB,IAAIF,EAC5B0B,KAAKZ,MAAMZ,IAAID,EAAIyB,KAAKxB,IAAID,EAC5ByB,KAAKZ,MAAM0B,KAAOd,KAAKjB,UAAUgC,YAG3B,YAAAN,WAAR,SAAmBnC,EAAWC,GAC5ByB,KAAKW,IAAIK,MAAMhB,KAAKW,IAAIrC,EAAIA,EAAG0B,KAAKW,IAAIpC,EAAIA,IAEhD,EArGA,CAA0B,EAAA0C,O,iWCkEpB7C,EAAO,IA7Db,YAME,a,OACE,YAAM,CAAE8C,YAAa,EAAAC,YAAA,cAAyB,KAqDlD,OA5D0B,OAUjB,YAAAC,MAAP,sBAEEpB,KAAKqB,MAAQ,GAEbrB,KAAKsB,SAAW,IAAIC,EAASvB,MAE7B,IAAK,IAAIwB,EAAI,EAAGA,EAAI,EAAGA,IACrBxB,KAAKyB,gBAGPzB,KAAK0B,KAAO,IAAI,EAAAvD,WAAW,CACzBwD,MAAO9D,EAAUM,WACjByD,SAAU,iDACVC,iBAAiB,EACjBC,QAAS,GACTC,KAAM,EACNC,QAAS,GACTC,SAAU,KAGZjC,KAAKkC,aAAe,IAAI,EAAAC,MAAM,CAACC,IAAK,WAClCvC,QAAQC,IAAI,aAGduC,SAAU,EAAGC,SAAS,IAEtBtC,KAAKuC,OAAOC,WAAa,CAAC9D,MAAO,IAAKC,OAAQ,KAC9CqB,KAAKyC,IAAI,WAAYzC,KAAKsB,UAC1BtB,KAAKyC,IAAIzC,KAAKkC,cAEdlC,KAAKK,MAAMC,SAAShB,GAAG,WAAW,SAACoD,GAC7BA,EAAIC,KAAO,EAAAnC,MAAA,YACb,EAAKiB,mBAKT,IAAMmB,EAAS,IAAI,EAAAC,OAAOC,OAAOC,OAAOlF,IAExC,OAAO,YAAMuD,MAAK,UAACwB,IAGb,YAAAnB,cAAR,WACI,IAAInD,EAAI0E,KAAKC,SAAWjD,KAAKkD,YACzB3E,EAAIyE,KAAKC,SAAWjD,KAAKmD,aACzB9E,EAAQ2E,KAAKI,IAAI,EAAGJ,KAAKK,MAAsB,EAAhBL,KAAKC,WAClC/E,EAAO,IAAID,EAAKG,EAAMC,EAAOC,EAAGC,GACtCyB,KAAKsB,SAASmB,IAAIvE,GAClB8B,KAAKqB,MAAMiC,KAAKpF,IAEtB,EA5DA,CAA0B,EAAAqF,SA8D1BnF,EAAKgD,QAAQoC,MAAK,WAChBpF,EAAKqF,UAAU,gB,wKCvEbC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUC,QAG3C,IAAIC,EAASJ,EAAyBE,GAAY,CAGjDC,QAAS,IAOV,OAHAE,EAAoBH,GAAUE,EAAQA,EAAOD,QAASF,GAG/CG,EAAOD,QAIfF,EAAoBK,EAAID,EAIxBJ,EAAoBrF,EAAIA,MC5BxBqF,EAAoBM,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOlE,MAAQ,IAAImE,SAAS,cAAb,GACd,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,QALjB,GCAxBV,EAAoBW,EAAI,CAACC,EAAKC,IAAU1B,OAAO2B,UAAUhF,eAAeiF,KAAKH,EAAKC,G,MCAlF,IAAIG,EACAhB,EAAoBM,EAAEW,gBAAeD,EAAYhB,EAAoBM,EAAEY,SAAW,IACtF,IAAIC,EAAWnB,EAAoBM,EAAEa,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UACzCD,EAAQE,SAAQR,EAAYM,EAAQA,EAAQE,OAAS,GAAGH,KAK7D,IAAKL,EAAW,MAAM,IAAIS,MAAM,yDAChCT,EAAYA,EAAUU,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpF1B,EAAoB2B,EAAIX,G,SCVxB,IAAIY,EAAkB,CACrBC,IAAK,GAGFC,EAAkB,CACrB,CAAC,IAAI,MAYFC,EAAuBpH,MAGvBqH,EAAuB,CAACC,EAA4BC,KAKvD,IAJA,IAGIjC,EAAUkC,GAHTC,EAAUC,EAAaC,EAASC,GAAkBL,EAGhCrE,EAAI,EAAG2E,EAAW,GACpC3E,EAAIuE,EAASZ,OAAQ3D,IACzBsE,EAAUC,EAASvE,GAChBmC,EAAoBW,EAAEiB,EAAiBO,IAAYP,EAAgBO,IACrEK,EAAS7C,KAAKiC,EAAgBO,GAAS,IAExCP,EAAgBO,GAAW,EAE5B,IAAIlC,KAAYoC,EACZrC,EAAoBW,EAAE0B,EAAapC,KACrCD,EAAoBK,EAAEJ,GAAYoC,EAAYpC,IAKhD,IAFGqC,GAASA,EAAQtC,GACjBiC,GAA4BA,EAA2BC,GACpDM,EAAShB,QACdgB,EAASC,OAATD,GAOD,OAHGD,GAAgBT,EAAgBnC,KAAK+C,MAAMZ,EAAiBS,GAGxDR,KAGJY,EAAqBC,KAAoC,8BAAIA,KAAoC,+BAAK,GAI1G,SAASC,IAER,IADA,IAAIC,EACIjF,EAAI,EAAGA,EAAIiE,EAAgBN,OAAQ3D,IAAK,CAG/C,IAFA,IAAIkF,EAAiBjB,EAAgBjE,GACjCmF,GAAY,EACRC,EAAI,EAAGA,EAAIF,EAAevB,OAAQyB,IAAK,CAC9C,IAAIC,EAAQH,EAAeE,GACG,IAA3BrB,EAAgBsB,KAAcF,GAAY,GAE3CA,IACFlB,EAAgBqB,OAAOtF,IAAK,GAC5BiF,EAAS9C,EAAoBA,EAAoBoD,EAAIL,EAAe,KAOtE,OAJ8B,IAA3BjB,EAAgBN,SAClBxB,EAAoBrF,IACpBqF,EAAoBrF,EAAIA,OAElBmI,EArBRH,EAAmBU,QAAQrB,EAAqBsB,KAAK,KAAM,IAC3DX,EAAmBhD,KAAOqC,EAAqBsB,KAAK,KAAMX,EAAmBhD,KAAK2D,KAAKX,IAsBvF,IAAIY,EAAUvD,EAAoBrF,EAClCqF,EAAoBrF,EAAI,KAEvBqF,EAAoBrF,EAAI4I,GAAW,CAAC5I,QAC5BoH,EAAuBc,O,GClFhC7C,EAAoBrF,K","file":"main.js","sourcesContent":["import { Engine, Scene } from 'excalibur';\n\n/**\n * Managed scene\n */\nexport class LevelOne extends Scene {\n  public onInitialize(engine: Engine) {}\n  public onActivate() {}\n  public onDeactivate() {}\n}\n","import { Texture } from 'excalibur';\nimport sword from './images/sword.png';\nimport tile from './images/tile.png';\nimport spritefont from './images/SpriteFont.png';\n\n/**\n * Default global resource dictionary. This gets loaded immediately\n * and holds available assets for the game.\n */\nconst Resources = {\n    Sword: new Texture(sword),\n    Tile: new Texture(tile),\n    SpriteFont: new Texture(spritefont),\n}\n\nexport { Resources }\n","import { Actor, CollisionType, Color, Input, Label, vec } from 'excalibur';\nimport { Resources } from '../../resources';\nimport { Game } from '../../index';\n\nexport class Tile extends Actor {\n  private tileValue : number;\n  private speed : number = 20;\n  private label : Label;\n  constructor(game: Game, value: number, x: number, y: number) {\n    super({\n      pos: vec(x, y),\n      width: 32,\n      height: 32,\n      color: new Color(255, 255, 255)\n    });\n    this.tileValue = value;\n    this.body.collider.type = CollisionType.Active;\n\n    this.label = new Label(\"n\", x, y);\n\n    this.on('precollision', (event) => {\n      if (event.actor.hasOwnProperty('tileValue') && event.other.hasOwnProperty('tileValue')){\n        let tileA = event.actor as Tile;\n        let tileB = event.other as Tile;\n        console.log(\"tiles colliding\");\n        if (tileA.tileValue == tileB.tileValue){\n          tileA.tileValue += tileB.tileValue;\n          tileB.kill();\n        console.log(\"same value; removing one tile\");\n        }\n      }\n    })\n  }\n\n\n  onInitialize() {\n    this.addDrawing(Resources.Tile);\n  }\n\n  public draw(engine, delta){\n    super.draw(engine, delta);\n    this.label.draw(engine, delta);\n  }\n\n\n  public update(engine, delta) {\n    if (\n      engine.input.keyboard.isHeld(Input.Keys.W) ||\n      engine.input.keyboard.isHeld(Input.Keys.Up)\n    ) {\n      this.accelerate(0, this.speed * -1);\n    }\n    if (\n      engine.input.keyboard.isHeld(Input.Keys.S) ||\n      engine.input.keyboard.isHeld(Input.Keys.Down)\n    ) {\n      this.accelerate(0, this.speed * +1);\n    }\n    if (\n      engine.input.keyboard.isHeld(Input.Keys.A) ||\n      engine.input.keyboard.isHeld(Input.Keys.Left)\n    ) {\n      this.accelerate(this.speed * -1, 0);\n    }\n\n    if (\n      engine.input.keyboard.isHeld(Input.Keys.D) ||\n      engine.input.keyboard.isHeld(Input.Keys.Right)\n    ) {\n      this.accelerate(this.speed, 0);\n    }\n    super.update(engine, delta);\n  }\n\n  public onPostUpdate(engine, delta){\n    if (this.pos.x < this.width / 2){\n      this.vel.x = 0;\n      this.pos.x = this.width / 2;\n    }\n\n    if (this.pos.x + this.width / 2 > engine.drawWidth){\n      this.vel.x = 0;\n      this.pos.x = engine.drawWidth - this.width / 2\n    }\n\n    if (this.pos.y < this.height / 2){\n      this.vel.y = 0;\n      this.pos.y = this.height / 2;\n    }\n\n    if (this.pos.y + this.height / 2 > engine.drawHeight){\n      this.vel.y = 0;\n      \n      this.pos.y = engine.drawHeight - this.height / 2\n    }\n    super.onPostUpdate(engine, delta);\n\n    this.label.pos.x = this.pos.x;\n    this.label.pos.y = this.pos.y;\n    this.label.text = this.tileValue.toString();\n  }\n\n  private accelerate(x: number, y: number){\n    this.vel.setTo(this.vel.x + x, this.vel.y + y);\n  }\n}\n","import { Engine, Loader, DisplayMode, Vector, Input, SpriteFont, Timer } from 'excalibur';\nimport { LevelOne } from './scenes/level-one/level-one';\nimport { Player } from './actors/player/player';\nimport { Tile } from './actors/player/tile';\nimport { Resources } from './resources';\n\n/**\n * Managed game class\n */\nexport class Game extends Engine {\n  private levelOne: LevelOne;\n  private tiles: Tile[];\n  public font: SpriteFont;\n  public newTileTimer: Timer;\n\n  constructor() {\n    super({ displayMode: DisplayMode.FullScreen });\n  }\n\n  public start() {\n\n    this.tiles = [];\n    // Create new scene with a player\n    this.levelOne = new LevelOne(this);\n\n    for (let i = 0; i < 4; i++){\n      this.addTileOnGrid();\n    }\n\n    this.font = new SpriteFont({\n      image: Resources.SpriteFont,\n      alphabet: '0123456789abcdefghijklmnopqrstuvwxyz,!\\'&.\"?- ',\n      caseInsensitive: true,\n      columns: 16,\n      rows: 3,\n      spWidth: 16,\n      spHeight: 16\n    });\n\n    this.newTileTimer = new Timer({fcn: () => {\n      console.log(\"new tile\");\n      //this.addTileOnGrid();\n    },\n    interval: 5, repeats: true});\n\n    this.screen.resolution = {width: 256, height: 256};\n    this.add('levelOne', this.levelOne);\n    this.add(this.newTileTimer);\n\n    this.input.keyboard.on('release', (evt) => {\n      if (evt.key == Input.Keys.Space) {\n        this.addTileOnGrid();\n      }\n    })\n\n    // Automatically load all default resources\n    const loader = new Loader(Object.values(Resources));\n\n    return super.start(loader);\n  }\n\n  private addTileOnGrid(){\n      let x = Math.random() * this.canvasWidth;\n      let y = Math.random() * this.canvasHeight;\n      let value = Math.pow(2, Math.floor(Math.random() * 3));\n      const tile = new Tile(game, value, x, y);\n      this.levelOne.add(tile);\n      this.tiles.push(tile);\n  }\n}\nconst game = new Game();\ngame.start().then(() => {\n  game.goToScene('levelOne');\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n// It's empty as some runtime module handles the default behavior\n__webpack_require__.x = x => {};\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// Promise = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\nvar deferredModules = [\n\t[995,325]\n];\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\nvar checkDeferredModules = x => {};\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime, executeModules] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0, resolves = [];\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tresolves.push(installedChunks[chunkId][0]);\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\twhile(resolves.length) {\n\t\tresolves.shift()();\n\t}\n\n\t// add entry modules from loaded chunk to deferred list\n\tif(executeModules) deferredModules.push.apply(deferredModules, executeModules);\n\n\t// run deferred modules when all chunks ready\n\treturn checkDeferredModules();\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkexcalibur_webpack\"] = self[\"webpackChunkexcalibur_webpack\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));\n\nfunction checkDeferredModulesImpl() {\n\tvar result;\n\tfor(var i = 0; i < deferredModules.length; i++) {\n\t\tvar deferredModule = deferredModules[i];\n\t\tvar fulfilled = true;\n\t\tfor(var j = 1; j < deferredModule.length; j++) {\n\t\t\tvar depId = deferredModule[j];\n\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferredModules.splice(i--, 1);\n\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n\t\t}\n\t}\n\tif(deferredModules.length === 0) {\n\t\t__webpack_require__.x();\n\t\t__webpack_require__.x = x => {};\n\t}\n\treturn result;\n}\nvar startup = __webpack_require__.x;\n__webpack_require__.x = () => {\n\t// reset startup function so it can be called again when more startup code is added\n\t__webpack_require__.x = startup || (x => {});\n\treturn (checkDeferredModules = checkDeferredModulesImpl)();\n};","// run startup\n__webpack_require__.x();\n"],"sourceRoot":""}